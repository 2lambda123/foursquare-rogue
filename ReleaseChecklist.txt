Pre-release checklist:

  [ ] Update CHANGELOG.md with features included in the new release
  [ ] Update README.md with latest version number
     [ ] Update sbt example in README.md with latest version
     [ ] Update "latest release" sentence in README.md with latest version
     [ ] Update "New in ..." section in README.md
        [ ] Move the existing "New in ..." section to the "Lots of new features since..." section
        [ ] Add the features listed in CHANGELOG.md to the "New in ..." section
  [ ] Remove the "-SNAPSHOT" from the version in RogueBuild.scala
  [ ] Reload sbt
  [ ] Run "; +clean; +test" in sbt to make sure everything works.
  [ ] Run "+publish-local"
  [ ] Commit these changes (but don't push!)

Release checklist:

  [ ] Run "+rogue-index/publish" in sbt
  [ ] Run "+rogue-core/publish" in sbt
  [ ] Run "+rogue-lift/publish" in sbt
  [ ] Run "+rogue-spindle/publish" in sbt
  [ ] Find the rogue repository on oss.sonatype.org / Staging Repositories
  [ ] Select it and click Close
  [ ] Select it and click Release

Post-release checklist:

  [ ] Tag the release version (e.g., "git tag v1.0.0")
  [ ] Bump the version in RogueBuild.scala and add "-SNAPSHOT" to it
  [ ] Commit these changes
  [ ] Push both commits to Github
  [ ] Push tags to Github with "git push origin --tags"


New contributor setup guide:

  - Set up your Sonatype account
    - Read the Sonatype setup guide: http://central.sonatype.org/pages/ossrh-guide.html
    - Create an account on the Sonatype JIRA: https://issues.sonatype.org/secure/Signup!default.jspa
    - Create a ticket to get added to the com.foursquare project: https://issues.sonatype.org/secure/CreateIssue.jspa?issuetype=21&pid=10134
      - Use https://issues.sonatype.org/browse/OSSRH-11150 as a template
    - Create a file at ~/.ivy2/.credentials with the following contents:

        realm=Sonatype Nexus Repository Manager
        host=oss.sonatype.org
        user=<your sonatype username>
        password=<your sonatype password>

  - Set up pgp keys
    - Read http://www.scala-sbt.org/sbt-pgp/usage.html
    - The instructions there are a little confusing, but the most common method is to do:
      $ gpg --gen-key
      $ gpg --send-key --keyserver hkp://keyserver.ubuntu.com <key id>
    - NOTE: You can find your <key id> in this message (that got printed when you generated your key): "gpg: key <key id> marked as ultimately trusted"
    - If you already have pgp keys, you can retrieve them via `gpg --recv-key <key id> <server>` instead of steps 1 and 2.

  - As soon as your Sonatype ticket is resolved, you should be able to `publish` in the steps above
